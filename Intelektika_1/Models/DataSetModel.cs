using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Intelektika_1.Utilities;
//
//    var dataSetModel = DataSetModel.FromJson(jsonString);

namespace Intelektika_1.Models
{
    public class DataSetModel
    {
        protected int _id;
        protected int _height;
        protected int _weight;
        protected string _sport;
        protected string _position;

        public int Id { get => _id; set => _id = value; }
        [JsonProperty("height")]
        public int Height { get => _height; set => _height = value; }
        [JsonProperty("weight")]
        public int Weight { get => _weight; set => _weight = value; }
        [JsonProperty("sport")]
        public string Sport { get => _sport; set => _sport = value; }
        [JsonProperty("position")]
        public string Position { get => _position; set => _position = value; }

        public static DataSetModel[] FromJson(string json) => JsonConvert.DeserializeObject<DataSetModel[]>(json, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new()
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}